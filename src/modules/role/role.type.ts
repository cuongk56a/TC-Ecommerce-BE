import mongoose from 'mongoose';
import {IDoc} from '../../utils/types/entityTypes';

export enum PERMISSION_TYPE{
  USER_CREATE = 'USER_CREATE',
  USER_READ = 'USER_READ',
  USER_UPDATE = 'USER_UPDATE',
  USER_DELETE = 'USER_DELETE',
  ROLE_CREATE = 'ROLE_CREATE',
  ROLE_READ = 'ROLE_READ',
  ROLE_UPDATE = 'ROLE_UPDATE',
  ROLE_DELETE = 'ROLE_DELETE',
  PRODUCT_CREATE = 'PRODUCT_CREATE',
  PRODUCT_READ = 'PRODUCT_READ',
  PRODUCT_UPDATE = 'PRODUCT_UPDATE',
  PRODUCT_DELETE = 'PRODUCT_DELETE',
  CATEGORY_CREATE = 'CATEGORY_CREATE',
  CATEGORY_READ = 'CATEGORY_READ',
  CATEGORY_UPDATE = 'CATEGORY_UPDATE',
  CATEGORY_DELETE = 'CATEGORY_DELETE',
  BRAND_CREATE = 'BRAND_CREATE',
  BRAND_READ = 'BRAND_READ',
  BRAND_UPDATE = 'BRAND_UPDATE',
  BRAND_DELETE = 'BRAND_DELETE',
  BANNER_CREATE = 'BANNER_CREATE',
  BANNER_READ = 'BANNER_READ',
  BANNER_UPDATE = 'BANNER_UPDATE',
  BANNER_DELETE = 'BANNER_DELETE',
  SLIDE_CREATE = 'SLIDE_CREATE',
  SLIDE_READ = 'SLIDE_READ',
  SLIDE_UPDATE = 'SLIDE_UPDATE',
  SLIDE_DELETE = 'SLIDE_DELETE',
  NEWS_CREATE = 'NEWS_CREATE',
  NEWS_READ = 'NEWS_READ',
  NEWS_UPDATE = 'NEWS_UPDATE',
  NEWS_DELETE = 'NEWS_DELETE',
  MEMBER_CREATE = 'MEMBER_CREATE',
  MEMBER_READ = 'MEMBER_READ',
  MEMBER_UPDATE = 'MEMBER_UPDATE',
  MEMBER_DELETE = 'MEMBER_DELETE',
  POINT_CREATE = 'POINT_CREATE',
  POINT_READ = 'POINT_READ',
  POINT_UPDATE = 'POINT_UPDATE',
  POINT_DELETE = 'POINT_DELETE',
}
export interface IRoleDoc extends IDoc {
  targetId: mongoose.Schema.Types.ObjectId;
  targetOnModel: string;
  name: string;
  permissions: string[];
  userIds: mongoose.Schema.Types.ObjectId[];
  isActice: boolean;
}
